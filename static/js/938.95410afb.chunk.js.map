{"version":3,"file":"static/js/938.95410afb.chunk.js","mappings":"iOAkBA,G,QAhBsB,SAACA,GACrB,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQC,OAAOC,WAAWP,GAC5BK,EAAMH,UAAYA,GACpBC,EAAWE,EAAMH,SAEnB,IAAMM,EAAW,kBAAML,EAAWE,EAAMH,QAAvB,EAEjB,OADAI,OAAOG,iBAAiB,SAAUD,GAC3B,kBAAMF,OAAOI,oBAAoB,SAAUF,EAA3C,CACR,GAAE,CAACN,EAASF,IAENE,CACR,G,SCNc,SAASS,EAAWC,GAC/B,IAAMC,EAAWC,EAAc,sBACzBC,EAAYD,EAAc,sBAC1BE,EAAWF,EAAc,6CAC/B,GAAwBb,EAAAA,EAAAA,UAAS,GAAjC,eAAOgB,EAAP,KAAaC,EAAb,KACA,GAAsCjB,EAAAA,EAAAA,UAAS,GAA/C,eAAOkB,EAAP,KAAoBC,EAApB,MACAhB,EAAAA,EAAAA,YACI,WACQS,IACAK,EAAQ,GACRE,EAAe,MAEfJ,IACAE,EAAQ,GACRE,EAAe,MAEfL,IACAG,EAAQ,GACRE,EAAe,KAEtB,GAAE,CAACP,EAAUG,EAAUD,IAE5B,IAAMM,GAASC,EAAAA,EAAAA,OAAK,kBAAM,uCAAuBC,MAAK,SAACC,GAAD,MAAa,CAAEC,QAASD,EAAOH,OAA/B,GAAlC,IACtB,OACE,SAAC,EAAAK,SAAD,CAAUC,UAAU,wCAApB,UACA,iBAAKC,UAAU,aAAf,WACI,iBAAKA,UAAU,OAAf,WACA,wBAAKhB,EAAMiB,UACX,SAAC,EAAAC,cAAD,CAAeC,IAAKnB,EAAMoB,QAC1BC,MAAO,IAAKC,OAAQ,IACpBC,IAAI,kBAGJ,SAACd,EAAD,CACAe,cAAejB,EACfkB,aAAc,GACdC,eAAgBrB,EAChBsB,MAAM,EACNC,wBAAwB,EACxBC,YAAY,EACZC,QAAS,CAACC,EAAAA,GAAYC,EAAAA,IACtBhB,UAAU,WARV,SAWIhB,EAAMiC,KAAKC,KAAI,SAACC,EAAMC,GAClB,OACI,SAAC,EAAAC,YAAD,WACI,cAAGC,KAAK,8BAAR,UACA,iBAAKtB,UAAU,OAAf,WACI,SAAC,EAAAE,cAAD,CAAeF,UAAU,MAAMG,IAAKgB,EAAKf,QACzCC,MAAO,OAAQC,OAAQ,OACvBiB,OAAO,OACPhB,IAAI,eAEJ,gBAAKP,UAAU,oBARLoB,EAczB,UAMZ,C","sources":["Components/useMediaQuery.jsx","Components/Categories/Dostoevsky/Dostoevsky.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useMediaQuery = (query) => {\n  const [matches, setMatches] = useState(false);\n\n  useEffect(() => {\n    const media = window.matchMedia(query);\n    if (media.matches !== matches) {\n      setMatches(media.matches);\n    }\n    const listener = () => setMatches(media.matches);\n    window.addEventListener(\"resize\", listener);\n    return () => window.removeEventListener(\"resize\", listener);\n  }, [matches, query]);\n\n  return matches;\n}\n\nexport default useMediaQuery;","import { useEffect, useState, lazy, Suspense } from 'react'\nimport {  SwiperSlide } from \"swiper/react\";\nimport { Pagination, Navigation } from \"swiper\";\nimport './dostoevsky.css'\nimport \"swiper/css\";\nimport \"swiper/css/pagination\";\nimport \"swiper/css/navigation\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport 'react-lazy-load-image-component/src/effects/blur.css';\nimport useMediaQuery from '../../useMediaQuery'\nexport default function Dostoevsky(props) {\n    const isMobile = useMediaQuery('(max-width: 768px)')\n    const isDesktop = useMediaQuery('(min-width: 960px)');\n    const isTablet = useMediaQuery('(min-width: 768px) and (max-width: 960px)');\n    const [nmbr, setNmbr] = useState(1);\n    const [nmbr_slides, setNmbr_slides] = useState(1);\n    useEffect(\n        () => {\n            if (isMobile) {\n                setNmbr(1);\n                setNmbr_slides(1.5);\n            }\n            if (isTablet) {\n                setNmbr(2);\n                setNmbr_slides(2.5);\n            }\n            if (isDesktop) {\n                setNmbr(3);\n                setNmbr_slides(3.5);\n            }\n        }, [isMobile, isTablet, isDesktop]\n    )\n    const Swiper = lazy(() => import(\"swiper/react\").then((module) => ({ default: module.Swiper })));\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n    <div className='dostoevsky'>\n        <div className=\"type\">\n        <h1>{props.Author}</h1>\n        <LazyLoadImage src={props.profile}\n        width={600} height={400}\n        alt=\"Image Alt\"\n      />\n        </div>\n        <Swiper\n        slidesPerView={nmbr_slides}\n        spaceBetween={30}\n        slidesPerGroup={nmbr}\n        loop={false}\n        loopFillGroupWithBlank={true}\n        navigation={true}\n        modules={[Pagination, Navigation]}\n        className=\"mySwiper\"\n      >\n        {\n            props.data.map((item, index) => {\n                return (\n                    <SwiperSlide key={index}>\n                        <a href=\"https://wa.me/+212771487686\">\n                        <div className=\"book\" >\n                            <LazyLoadImage className='img' src={item.profile}\n                            width={'100%'} height={'100%'}\n                            effect=\"blur\"\n                            alt=\"Image Alt\"\n                             />\n                            <div className=\"book-info\">\n                            </div>\n                        </div>\n                        </a>\n                    </SwiperSlide>\n                )\n            }\n            )}\n      </Swiper>\n    </div>\n    </Suspense>\n  )\n}\n"],"names":["query","useState","matches","setMatches","useEffect","media","window","matchMedia","listener","addEventListener","removeEventListener","Dostoevsky","props","isMobile","useMediaQuery","isDesktop","isTablet","nmbr","setNmbr","nmbr_slides","setNmbr_slides","Swiper","lazy","then","module","default","Suspense","fallback","className","Author","LazyLoadImage","src","profile","width","height","alt","slidesPerView","spaceBetween","slidesPerGroup","loop","loopFillGroupWithBlank","navigation","modules","Pagination","Navigation","data","map","item","index","SwiperSlide","href","effect"],"sourceRoot":""}