{"version":3,"file":"static/js/359.02db7eed.chunk.js","mappings":"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","sources":["Components/AnimatedPages.jsx","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","Pages/Contact/Contact.jsx"],"sourcesContent":["import { motion } from \"framer-motion\";\nimport { pure } from 'recompose';\nconst animations = {\n  initial: { opacity: 0, x: 100 },\n  animate: { opacity: 1, x: 0 },\n  exit: { opacity: 0, x: -100 },\n};\n\nconst AnimatedPages = ({ children }) => {\n  return (\n    <motion.div\n      variants={animations}\n      initial=\"initial\"\n      animate=\"animate\"\n      exit=\"exit\"\n      transition={{ duration: 1 }}\n    >\n      {children}\n    </motion.div>\n  );\n};\n\nexport default pure(AnimatedPages);","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.7.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import React, { useRef} from \"react\";\nimport emailjs from \"@emailjs/browser\";\nimport { pure } from 'recompose';\nimport AnimatedPages from '../../Components/AnimatedPages'\nimport { useAlert } from 'react-alert'\nimport './contact.css'\nimport { useSelector } from \"react-redux\";\nconst Contact = () => {\n  const form = useRef();\n  const sendEmail = (e) => {\n    e.preventDefault();\n\n    emailjs\n      .sendForm(\n        \"service_hfv5ubn\",\n        \"template_zdf798p\",\n        form.current,\n        process.env.REACT_APP_EMAIL_KEY\n      )\n      .then(\n        (result) => {\n          console.log(result.text);\n        },\n        (error) => {\n          console.log(error.text);\n        }\n      );\n  };\n  \n  const state = useSelector( state => state.userReducer.username )\nconst style = {\n  display: 'flex',\n}\nif(state) {\n  style.display = 'none'\n}\nelse{\n  style.display = 'flex'\n}\nconst alert = useAlert()\n  return (\n    <AnimatedPages>\n      <div className=\"contact-page\" style = {style}>\n        <div className=\"contact-form\">\n        <form ref={form} onSubmit={sendEmail}>\n        <div className=\"input\">\n        <input type=\"text\" placeholder=\"اسمك الكامل\" name=\"user_name\" />\n        </div>\n        <div className=\"input\">\n        <input type=\"email\" placeholder=\"البريد الالكتروني\"  name=\"user_email\" />\n        </div>\n        <div className=\"input\">\n        <textarea name=\"message\" placeholder=\"رسالتك\" />\n        </div>\n        <div class=\"wrapper input\">\n        <input type=\"submit\" value=\"ارسال\" onClick={() => {\n        alert.show('Your message has been sent')\n      }} />\n        </div>  \n      </form>\n        </div>\n      </div>\n    </AnimatedPages>\n  );\n};\n\nexport default pure(Contact);"],"names":["animations","initial","opacity","x","animate","exit","pure","children","variants","transition","duration","store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","httpResponse","this","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","form","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","useRef","state","useSelector","userReducer","username","style","display","alert","useAlert","AnimatedPages","className","ref","onSubmit","e","preventDefault","emailjs","current","process","then","result","console","log","error","type","placeholder","name","class","value","onClick","show"],"sourceRoot":""}